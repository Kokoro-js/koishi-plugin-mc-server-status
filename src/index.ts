import { Context, Schema } from 'koishi'
import { mcs } from './commands/mcs'
import { bind } from './commands/mcs.bind'

export const name = 'mc-server-status'

export const inject = [
  'puppeteer',
  'database',
  'umamiStatisticsService'
]

export const umami: [string, string] = ["0782d0fd-816c-4277-bf12-c19fa2b8b75c", 'https://data.itzdrli.cc']

export interface Config {
  data_collect: boolean,
  IP: string
  motd: boolean
  skipSRV: boolean
  authority: number
  footer: string
  dnsServer: string
}

export const Config: Schema<Config> = Schema.object({
  data_collect: Schema
    .boolean()
    .default(true)
    .description('是否允许匿名数据收集 隐私政策见上方链接'),
  IP: Schema.string()
    .required(true)
    .description('默认服务器IP'),
  authority: Schema
    .number()
    .default(0)
    .description('默认指令权限等级 (mcs)'),
  dnsServer: Schema.string()
    .description('DNS 服务器')
    .default('223.6.6.6'),
  skipSRV: Schema.boolean()
    .description('是否跳过 SRV 记录')
    .default(false),
  motd: Schema.boolean()
    .default(true)
    .description('是否显示服务器 MOTD'),
  footer: Schema.string()
    .role('textarea', { rows: [2, 4] })
    .default('Generated by koishi-plugin-mc-server-manager v4.0.0\n延迟仅供参考')
    .description('最下方显示的文字 (可以多行)')
})

export const usage = `
<h2>如遇使用问题可以前往QQ群: 957500313 讨论<h2>
<h2> 匿名数据收集 👉 <a href="https://legal.itzdrli.cc">隐私政策</a> </h2>
<p> 请我喝杯咖啡 👇</br><a href="https://ko-fi.com/itzdrli"><img src="https://img.shields.io/badge/Ko--fi-F16061?style=for-the-badge&logo=ko-fi&logoColor=white" alt="ko-fi"></a></p>
  <a style="
    font-size: 30px;
    border: 2px solid red;
    display: inline-block;
    border-radius: 20px;
    padding: 5px;
    background: purple;
    color: #000000;
" href="https://afdian.com/a/itzdrli">爱发电</a>
</a>
`

declare module 'koishi' {
  interface Tables {
    mc_server_status: McServerStatus
  }
}

export interface McServerStatus {
  id: string
  server_ip: string
}

export function apply(ctx: Context, config: Config) {
  
  const logger = ctx.logger('mc-server-status');
  ctx.model.extend('mc_server_status', {
    id: 'string',
    server_ip: 'string'
  }, {})
  mcs(ctx, config)
  bind(ctx, config)
}
